---
import { type SessionInfo } from "../../scripts/api/sessionize_api";
import SessionTopic from "./SessionTopic.astro";

interface Props {
  session: SessionInfo;
}
//speaker.data

const { session } = Astro.props;

const dateStart = new Date(session.startsAt);
const dateEnd = new Date(session.endsAt);

const duration = dateEnd.getTime() - dateStart.getTime();
const durationMinutes = duration / 60000;

---

<a
  href={`/sessions/${session.slug}`}
  class="p-3 card bg-base-200 text-base-content hover:bg-base-300 border-4 rounded-lg border-base-content duration-150 ease-in flex flex-col h-80"
>
  <div class="flex justify-between gap-4">
    <p class="text-xl font-medium mb-3">{session.title}</p>
  </div>
  <div class="flex flex-wrap gap-2">
    <div class="py-1 px-2 rounded-md bg-green-600 text-white">
      <span class="text-sm">{session.sessionLevel}</span>
    </div>

    {session.topics.map((t) => <SessionTopic topic={t} />)}
  </div>
  <div class="flex mt-auto">
    <div class="flex-flex-col gap-2">
      {
        session.room && (
          <div class="flex gap-3 items-center">
            <div class="w-4">
              <img src="/assets/vectors/pin.svg" alt="session duration" />
            </div>
            <div>{session.room ?? "To be announced"}</div>
          </div>
        )
      }
      {
        durationMinutes > 0 && (
          <div class="flex gap-3 items-center">
            <div class="w-4">
              <img src="/assets/vectors/time.svg" alt="session duration" />
            </div>
            <div>{durationMinutes} mins</div>
          </div>
        )
      }
    </div>
  </div>
  {
    session.speakers && (
      <>
        <div class="mb-3 mt-4 border border-t-0 border-gray-400/50" />
        <div class="flex flex-col gap-2">
          {session.speakers.map((speaker) => (
            <div class="flex flex-row">
              <div class="flex-none w-10 pr-3">
                <img
                  class="rounded-full"
                  src={speaker.profilePicture}
                  alt={speaker.fullName}
                />
              </div>
              <div class="flex-1">
                <p class="text-md">{speaker.fullName}</p>
              </div>
            </div>
          ))}
        </div>
      </>
    )
  }
</a>
